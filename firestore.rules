rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /artifacts/{appId}/public/data/{document=**} {
      allow read, write: if request.auth != null;
    }

    // Allow users to read and write their own settings
    match /userSettings/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Allow users to read and write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Allow users to manage their own transactions
      match /transactions/{transactionId} {
        allow read, write, create, delete: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Groups collection rules
    match /groups/{groupId} {
      // Allow reading if user is the creator or if authenticated (we'll handle member checks in the app)
      allow read: if request.auth != null;
      
      // Allow creating groups
      allow create: if request.auth != null && request.auth.uid == request.resource.data.createdBy;
      
      // Allow updating if authenticated (we'll handle member checks in the app)
      allow update: if request.auth != null;
      
      // Allow deleting if user is the creator
      allow delete: if request.auth != null && request.auth.uid == resource.data.createdBy;

      // Group transactions subcollection
      match /transactions/{transactionId} {
        // Allow reading group transactions if authenticated (we'll handle member checks in the app)
        allow read: if request.auth != null;
        
        // Allow creating group transactions if authenticated
        allow create: if request.auth != null && 
          request.auth.uid == request.resource.data.createdBy;
        
        // Allow updating group transactions if user created the transaction
        allow update: if request.auth != null && 
          request.auth.uid == resource.data.createdBy;
        
        // Allow deleting group transactions if user created the transaction
        allow delete: if request.auth != null && 
          request.auth.uid == resource.data.createdBy;
      }
    }

    // Invitations collection rules
    match /invitations/{invitationId} {
      // Allow reading invitations for authenticated users (we'll handle checks in the app)
      allow read: if request.auth != null;
      
      // Allow creating invitations if authenticated
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.invitedBy;
      
      // Allow updating invitations if authenticated (for accepting/rejecting)
      allow update: if request.auth != null;
      
      // Allow deleting invitations if user is the inviter
      allow delete: if request.auth != null && 
        request.auth.uid == resource.data.invitedBy;
    }
  }
}
